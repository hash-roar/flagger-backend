{
	// Place your flagger-backend 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"return error": {
		"scope": "golang,go",
		"prefix": "reterr",	
		"body": [
			"log.Println(err)",
			"c.JSON(http.StatusForbidden, gin.H{",
			"\t\"error\": \"服务端错误\",",
			"})",
			"return"
		],
		"description": "return error"
	},
	"return success":{
		"scope": "golang,go",
		"prefix": "retsuc",
		"body": [
			"c.JSON(http.StatusOK, gin.H{",
			"\t\"message\": \"$0\",",
			"})",
		],
	},
	"init handler":{
		"prefix": "inithandler",
		"scope": "golang,go",
		"body": [
			"openid := c.Request.Header.Get(\"X-WX-OPENID\")",
			// "fid, _ := strconv.Atoi(c.PostForm(\"fid\"))",
			"uid, err := dbhandlers.GetUidByOpenid(openid)",
			"if err != nil {",
			"\tlog.Println(err)",
			"\tc.JSON(http.StatusForbidden, gin.H{",
			"\t\t\"error\": \"服务端错误\",",
			"\t    })",
			"\treturn",
			"}"
		]
	}
}